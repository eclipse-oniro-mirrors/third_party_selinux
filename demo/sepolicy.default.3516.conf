class security
class process
class capability
class filesystem
class file
class dir
class fd
class lnk_file
class chr_file
class blk_file
class sock_file
class fifo_file

sid kernel
sid security
sid unlabeled
sid fs
sid file
sid init
sid untrusted_app

common file
{
ioctl
read
write
create
getattr
setattr
lock
relabelfrom
relabelto
append
map
unlink
link
rename
execute
quotaon
mounton
audit_access
open
execmod
watch
watch_mount
watch_sb
watch_with_perm
watch_reads
}
class filesystem
{
mount
remount
unmount
getattr
relabelfrom
relabelto
associate
quotamod
quotaget
watch
}
class dir
inherits file
{
add_name
remove_name
reparent
search
rmdir
}
class file
inherits file
{
execute_no_trans
entrypoint
}
class lnk_file
inherits file
class chr_file
inherits file
{
execute_no_trans
entrypoint
}
class blk_file
inherits file
class sock_file
inherits file
class fifo_file
inherits file
class fd
{
use
}
class process
{
fork
transition
sigchld
sigkill
sigstop
signull
signal
ptrace
getsched
setsched
getsession
getpgid
setpgid
getcap
setcap
share
getattr
setexec
setfscreate
noatsecure
siginh
setrlimit
rlimitinh
dyntransition
setcurrent
execmem
execstack
execheap
setkeycreate
setsockcreate
getrlimit
}
class security
{
compute_av
compute_create
compute_member
check_context
load_policy
compute_relabel
compute_user
setenforce
setbool
setsecparam
setcheckreqprot
read_policy
validate_trans
}

sensitivity s0;
dominance { s0  }
category c0;
category c1;
category c2;
category c3;
category c4;
category c5;
category c6;
category c7;
category c8;
category c9;
category c10;
level s0:c0.c10;
mlsconstrain process { transition dyntransition }
((h1 eq h2 and l1 eq l2) or t1 == mlstrustedsubject);

attribute dev_type;
attribute domain;
attribute fs_type;
attribute file_type;
attribute data_file_type;
expandattribute data_file_type false;
attribute mlstrustedsubject;
attribute mlstrustedobject;
attribute appdomain;
attribute untrusted_app_all;

type app_data_file, file_type, data_file_type;
type init, domain, mlstrustedsubject;
type untrusted_app, domain, mlstrustedsubject;
type init_exec, file_type;
type kernel, domain, mlstrustedsubject;

type labeledfs, fs_type;
type rootfs, fs_type;
type unlabeled, file_type;


allow init app_data_file:file { getattr open write read execute map };
auditallow untrusted_app app_data_file:file { getattr open write read execute map };

role r;
role r types domain;
user u roles { r } level s0 range s0 - s0:c0.c10;
sid kernel u:r:kernel:s0
sid security u:object_r:kernel:s0
sid unlabeled u:object_r:unlabeled:s0
sid fs u:object_r:labeledfs:s0
sid file u:object_r:unlabeled:s0
sid init u:object_r:unlabeled:s0
sid untrusted_app u:object_r:unlabeled:s0


fs_use_xattr ext4 u:object_r:labeledfs:s0;

genfscon rootfs / u:object_r:rootfs:s0